version: "3.8"

services:
  # Frontend (Client)
  client:
    build: client
    ports:
      - "5173:5173"  # Frontend wird auf Port 5173 gemappt
    networks:
      - mern
    volumes:
      - ./client:/app
      - /app/node_modules

  # Backend (Server)
  server:
    build: server
    networks:
      - mern
    depends_on:
      - mongodb
      - redis
    environment:
      REDIS_HOST: redis  # Redis Host für socket.io
      REDIS_PORT: 6379
    volumes:
      - ./server:/app
      - /app/node_modules
    scale: 3  # Skaliere den Service auf 3 Instanzen (du kannst die Zahl nach Bedarf anpassen)

  # MongoDB (Datenbank)
  mongodb:
    build: db
    ports:
      - "27017:27017"
    networks:
      - mern
    volumes:
      - mongo-data:/data/db
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.runCommand({ ping: 1 })"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis (für socket.io)
  redis:
    image: redis:latest  # Verwende das offizielle Redis-Image
    networks:
      - mern
    ports:
      - "6379:6379"  # Redis wird auf Port 6379 gemappt

  # Nginx (Load Balancer)
  nginx:
    image: nginx:latest
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf  # Konfiguration für Nginx
    ports:
      - "80:80"  # Öffentlich zugänglicher Port
    depends_on:
      - server
    networks:
      - mern

networks:
  mern:
    driver: bridge

volumes:
  mongo-data:
    driver: local